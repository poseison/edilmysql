(function(){$(function(){return $(".jquery-ui-date").datepicker({dateFormat:"yy-mm-dd"})}),this.events=[],this.RaffleCtrl=function(t,e,a,o){return t.status_options=[{display:"Daily Consumption",value:0},{display:"Monthly Consumption",value:1},{display:"Yearly Consumption",value:2}],t.doSearch=function(){t.tableParams.reload(),console.log("DoSearch button pressed")},t.map={center:{latitude:45,longitude:-73},zoom:8},t.chart={type:"ColumnChart",cssStyle:"height:200px; width:300px;",data:{cols:[{id:"month",label:"Month",type:"string"},{id:"laptop-id",label:"Laptop",type:"number"},{id:"desktop-id",label:"Desktop",type:"number"},{id:"server-id",label:"Server",type:"number"},{id:"cost-id",label:"Shipping",type:"number"}],rows:[{c:[{v:"January"},{v:19,f:"42 items"},{v:12,f:"Ony 12 items"},{v:7,f:"7 servers"},{v:4}]},{c:[{v:"February"},{v:13},{v:1,f:"1 unit (Out of stock this month)"},{v:12},{v:2}]},{c:[{v:"March"},{v:24},{v:0},{v:11},{v:6}]}]},options:{title:"Sales per month",isStacked:"true",fill:20,displayExactValues:!0,vAxis:{title:"Sales unit",gridlines:{count:6}},hAxis:{title:"Date"}},formatters:{}},t.submitaverage=function(){return a.post("http://localhost:3000/avresults.json",{ltable:t.newEntry.consumption,lchoice:t.lchoice,lid:gon.locid}).success(function(){return function(e){t.avresult=e,t.tableParams.reload()}}(this)).error(function(){console.log("Error on submissiion")})},t.$watch("newEntry.consumption",function(){return t.submitaverage(),t.tableParams.reload()}),t.$watch("lchoice",function(){return t.submitaverage(),t.tableParams.reload()}),t.$watch("newEntry.title",function(){return t.submit()}),t.numero=this.numerp,t.chart_options={data:[],xkey:"capturedate",ykeys:["capturevalue"],labels:["Consumption in Nm3 :"],xlabels:"day"},t.submit=function(){return a.post("http://localhost:3000/ltables.json",{ltable:t.newEntry.title,ldtable:t.newEntry.titleza,lid:gon.locid}).success(function(){return function(e){t.chart_options.data=e,t.tableParams.reload()}}(this)).error(function(){return console.log(t.entries)}),a.post("http://localhost:3000/api/v1/monthcharts.json",{monthchart:t.newEntry.title}).success(function(){return function(e){t.bar_options.data=e,t.tableParams.reload()}}(this)).error(function(t){return console.log(t)})},t.bar_options={data:[{y:"2006",a:100,b:90},{y:"2007",a:75,b:65},{y:"2008",a:50,b:40},{y:"2009",a:75,b:65},{y:"2010",a:50,b:40},{y:"2011",a:75,b:65},{y:"2012",a:100,b:90}],xkey:"value1",ykeys:["value2"],labels:["Series A"],barColors:["#4F89DB","#333A92","#5D57BA","#2F1360","#620F8B","#872FB0"]},t.tableParams=new o({page:1,count:25,sorting:{capturedate:"asc"}},{total:0,getData:function(e,a){return console.log("run deferred"),e.resolve(t.chart_options.data.slice((a.page()-1)*a.count(),a.page()*a.count()))}}),t.xkey="range",t.ykeys=["total_tasks","total_overdue"],t.labels=["Total Tasks","Out of Budget Tasks"],t.myModel=[{range:"January",total_tasks:20,total_overdue:5},{range:"January",total_tasks:35,total_overdue:8},{range:"January",total_tasks:20,total_overdue:1},{range:"January",total_tasks:20,total_overdue:6}]},app.controller("RaffleCtrl",RaffleCtrl),console.log(gon.locid)}).call(this);