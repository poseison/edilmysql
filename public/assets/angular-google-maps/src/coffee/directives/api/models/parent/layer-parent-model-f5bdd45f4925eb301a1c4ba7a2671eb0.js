(function(){var t=function(t,e){return function(){return t.apply(e,arguments)}},e={}.hasOwnProperty,o=function(t,o){function r(){this.constructor=t}for(var n in o)e.call(o,n)&&(t[n]=o[n]);return r.prototype=o.prototype,t.prototype=new r,t.__super__=o.prototype,t};this.ngGmapModule("directives.api.models.parent",function(){return this.LayerParentModel=function(e){function r(e,o,r,n,a,s,i){return this.scope=e,this.element=o,this.attrs=r,this.mapCtrl=n,this.$timeout=a,this.onLayerCreated=null!=s?s:void 0,this.$log=null!=i?i:directives.api.utils.Logger,this.createGoogleLayer=t(this.createGoogleLayer,this),null==this.attrs.type?void this.$log.info("type attribute for the layer directive is mandatory. Layer creation aborted!!"):(this.createGoogleLayer(),this.gMap=void 0,this.doShow=!0,void this.$timeout(function(t){return function(){return t.gMap=n.getMap(),angular.isDefined(t.attrs.show)&&(t.doShow=t.scope.show),null!==t.doShow&&t.doShow&&null!==t.gMap&&t.layer.setMap(t.gMap),t.scope.$watch("show",function(e,o){return e!==o?(t.doShow=e,t.layer.setMap(e?t.gMap:null)):void 0},!0),t.scope.$watch("options",function(e,o){return e!==o?(t.layer.setMap(null),t.layer=null,t.createGoogleLayer()):void 0},!0),t.scope.$on("$destroy",function(){return t.layer.setMap(null)})}}(this)))}return o(r,e),r.prototype.createGoogleLayer=function(){return this.layer=null==this.attrs.options?void 0===this.attrs.namespace?new google.maps[this.attrs.type]:new google.maps[this.attrs.namespace][this.attrs.type]:void 0===this.attrs.namespace?new google.maps[this.attrs.type](this.scope.options):new google.maps[this.attrs.namespace][this.attrs.type](this.scope.options),this.$timeout(function(t){return function(){var e;return null!=t.layer&&null!=t.onLayerCreated&&(e=t.onLayerCreated(t.scope,t.layer))?e(t.layer):void 0}}(this))},r}(oo.BaseObject)})}).call(this);