(function(){var r=function(r,t){return function(){return r.apply(t,arguments)}},t={}.hasOwnProperty,o=function(r,o){function n(){this.constructor=r}for(var e in o)t.call(o,e)&&(r[e]=o[e]);return n.prototype=o.prototype,r.prototype=new n,r.__super__=o.prototype,r};angular.module("google-maps.directives.api").factory("FreeDrawPolygons",["Logger","BaseObject","CtrlHandle","DrawFreeHandChildModel",function(t,n,e,i){var p;return p=function(n){function p(){return this.link=r(this.link,this),p.__super__.constructor.apply(this,arguments)}return o(p,n),p.include(e),p.prototype.restrict="EA",p.prototype.replace=!0,p.prototype.require="^googleMap",p.prototype.scope={polygons:"=",draw:"="},p.prototype.link=function(r,o,n,e){return this.mapPromise(r,e).then(function(){return function(o){var n,e;return r.polygons?_.isArray(r.polygons)?(n=new i(o,r.originalMapOpts),e=void 0,r.draw=function(){return"function"==typeof e&&e(),n.engage(r.polygons).then(function(){var t;return t=!0,e=r.$watch("polygons",function(r,o){var n;return t?void(t=!1):(n=_.differenceObjects(o,r),n.forEach(function(r){return r.setMap(null)}))})})}):t.error("Free Draw Polygons must be of type Array!"):t.error("No polygons to bind to!")}}(this))},p}(n)}])}).call(this);