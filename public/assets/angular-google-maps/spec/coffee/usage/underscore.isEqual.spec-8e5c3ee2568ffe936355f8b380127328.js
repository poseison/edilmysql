(function(){describe("_.isEqual",function(){return beforeEach(function(){return this.objArray=[{a:1,b:1},{a:2,b:2},{a:3,b:3}]}),describe("Comparing Arrays of Objects",function(){return describe("isEqual",function(){return describe("same length",function(){return it("when two arrays are identical - same reference",function(){return expect(_.isEqual(this.objArray,this.objArray)).toBeTruthy}),it("diff reference, same values",function(){var e;return e=[{a:1,b:1},{a:2,b:2},{a:3,b:3}],expect(_.isEqual(this.objArray,e)).toBeTruthy}),it("diff reference one added (new), same values (intersected)",function(){var e;return e=[{a:1,b:1},{a:2,b:2},{a:3,b:3},{a:4,b:4}],expect(_.isEqual(this.objArray,e)).toBeFalsy})}),describe("different length - not identical",function(){return it("diff reference, diff values",function(){var e;return e=[{a:1,b:2},{a:2,b:3},{a:3,b:4}],expect(_.isEqual(this.objArray,e)).toBeFalsy}),it("diff reference, 1 val identical",function(){var e;return e=[{a:1,b:1}],expect(_.isEqual(this.objArray,e)).toBeFalsy})}),describe("array of nested objects",function(){return beforeEach(function(){return this.objArray=[{a:1,b:{n:1,m:2,o:"hi!"}},{a:2,b:{n:4,m:5,o:"hi!"}},{a:{n:2,m:3,o:"hi!"},b:3}]}),it("same - reference should be equal",function(){return expect(_.isEqual(this.objArray,this.objArray)).toBeTruthy}),it("same - dif reference same values should be ==",function(){var e;return e=[{a:1,b:{n:1,m:2,o:"hi!"}},{a:2,b:{n:4,m:5,o:"hi!"}},{a:{n:2,m:3,o:"hi!"},b:3}],expect(_.isEqual(this.objArray,e)).toBeTruthy}),it("dif reference diff values should be !=",function(){var e;return e=[{a:1,b:{n:1,m:2,o:"hi!"}},{a:2,b:{n:4,m:5,o:"hi!!"}},{a:{n:2,m:3,o:"hi!"},b:3}],expect(_.isEqual(this.objArray,e)).toBeFalsy})})})})})}).call(this);