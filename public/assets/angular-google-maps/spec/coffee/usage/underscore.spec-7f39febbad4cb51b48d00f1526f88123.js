(function(){describe("UnderScore Examples",function(){return beforeEach(function(){return this.objArray=[{a:1,b:1},{a:2,b:2},{a:3,b:3}]}),describe("Comparing Arrays of Objects",function(){return describe("intersection",function(){return describe("same length",function(){return it("when two arrays are identical - same reference",function(){var e;return e=_.intersection(this.objArray,this.objArray),expect(e.length).toEqual(this.objArray.length)})}),describe("different length - not identical",function(){return it("diff reference, diff values",function(){var e,t;return e=[{a:1,b:2},{a:2,b:3},{a:3,b:4}],t=_.intersection(this.objArray,e),expect(t.length).toEqual(0)}),it("diff reference, 1 val identical",function(){var e,t;return e=[{a:1,b:1}],t=_.intersection(this.objArray,e),expect(t.length).toEqual(0)}),it("diff reference, same values",function(){var e,t,r,n;return e=[{a:1,b:1},{a:2,b:2},{a:3,b:3}],t=this.objArray,r=this.objArray.indexOf({a:1,b:1}),expect(r).toBe(-1),n=_.intersection(this.objArray,e),expect(n.length).toEqual(0)})})}),describe("_.intersectionObjects - extension",function(){return describe("same length",function(){return it("when two arrays are identical - same reference",function(){var e;return e=_.intersectionObjects(this.objArray,this.objArray),expect(e.length).toEqual(this.objArray.length)}),it("diff reference, same values",function(){var e,t,r;return e=[{a:1,b:1},{a:2,b:2},{a:3,b:3}],t=this.objArray,r=_.intersectionObjects(this.objArray,e),expect(r.length).toEqual(this.objArray.length)}),it("diff reference one added (new), same values (intersected)",function(){var e,t,r;return e=[{a:1,b:1},{a:2,b:2},{a:3,b:3},{a:4,b:4}],t=this.objArray,r=_.intersectionObjects(this.objArray,e),expect(r.length).toEqual(this.objArray.length)})}),describe("different length - not identical",function(){return it("diff reference, diff values",function(){var e,t;return e=[{a:1,b:2},{a:2,b:3},{a:3,b:4}],t=_.intersectionObjects(this.objArray,e),expect(t.length).toEqual(0)}),it("diff reference, 1 val identical",function(){var e,t;return e=[{a:1,b:1}],t=_.intersectionObjects(this.objArray,e),expect(t.length).toEqual(1),expect(t.length).toNotEqual(this.objArray.length)})})})})})}).call(this);