(function(){describe("_.differenceObjects",function(){return beforeEach(function(){return this.objArray=[{a:1,b:1},{a:2,b:2},{a:3,b:3}]}),describe("Comparing Arrays of Objects",function(){return describe("difference",function(){return describe("0 length",function(){return it("when two arrays are identical - same reference",function(){var e;return e=_.difference(this.objArray,this.objArray),expect(e.length).toEqual(0)})}),describe("different length - not identical",function(){return it("diff reference, diff values",function(){var e,r;return e=[{a:1,b:2},{a:2,b:3},{a:3,b:4}],r=_.difference(this.objArray,e),expect(r.length).toEqual(3)}),it("diff reference, 1 val identical",function(){var e,r;return e=[{a:1,b:1}],r=_.difference(this.objArray,e),expect(r.length).toEqual(3)}),it("diff reference, same values",function(){var e,r,t,n;return e=[{a:1,b:1},{a:2,b:2},{a:3,b:3}],r=this.objArray,t=this.objArray.indexOf({a:1,b:1}),expect(t).toBe(-1),n=_.difference(this.objArray,e),expect(n.length).toEqual(3)})})}),describe("_.differenceObjects - extension",function(){return describe("same length",function(){return it("when two arrays are identical - same reference",function(){var e;return e=_.differenceObjects(this.objArray,this.objArray),expect(e.length).toEqual(0)}),it("diff reference, same values",function(){var e,r,t;return e=[{a:1,b:1},{a:2,b:2},{a:3,b:3}],r=this.objArray,t=_.differenceObjects(e,this.objArray),expect(t.length).toEqual(0)}),it("diff reference one added (new), same values (intersected)",function(){var e,r,t;return e=[{a:1,b:1},{a:2,b:2},{a:3,b:3},{a:4,b:4}],r=this.objArray,t=_.differenceObjects(e,this.objArray),expect(t.length).toEqual(1)})}),describe("different length - not identical",function(){return it("diff reference, diff values",function(){var e,r;return e=[{a:1,b:2},{a:2,b:3},{a:3,b:4}],r=_.differenceObjects(e,this.objArray),expect(r.length).toEqual(3)}),it("diff reference, 1 val identical",function(){var e,r;return e=[{a:1,b:1}],r=_.differenceObjects(e,this.objArray),expect(r.length).toEqual(0)})}),describe("removal",function(){return it("diff reference, 1 val identical",function(){var e,r;return e=[{a:1,b:1}],r=_.withoutObjects(this.objArray,e),expect(r.length).toEqual(2)})})})})})}).call(this);