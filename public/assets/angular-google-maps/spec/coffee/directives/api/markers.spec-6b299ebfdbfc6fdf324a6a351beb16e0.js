(function(){describe("markers directive test",function(){return beforeEach(function(){return module("google-maps.mocks"),module("google-maps"),module("google-maps.directives.api.utils"),inject(function(e){return function(t,o,r,i,n){return e.rootScope=t,e.timeout=o,e.compile=r,e.apiMock=new i,e.apiMock.mockAPI(),e.apiMock.mockMap(),e.markerCount=0,e.marker=function(){return e.markerCount++},e.marker.prototype=e.apiMock.getMarker().prototype,e.subject=n,e.apiMock.mockMarker(e.marker)}}(this))}),it("should add markers for each object in model",function(){var e,t,o;return t='<google-map draggable="true" center="map.center" zoom="map.zoom">\n    <markers models="items" coords="\'self\'" ></markers>\n</google-map>',o=this.rootScope.$new(),o.items=[],o.map={},o.map.zoom=12,o.map.center={longitude:47,latitude:-27},o.$watch("items",function(e){return console.log(e)}),e=this.compile(t)(o),o.$apply(),expect(this.markerCount).toEqual(0),this.timeout(function(){var e;return e={},e.id=0,e.latitude=47,e.longitude=-27,o.items.push(e)}),this.timeout.flush(),o.$apply(),expect(this.markerCount).toEqual(1)}),it("exists",function(){return expect(this.subject).toBeDefined()})})}).call(this);