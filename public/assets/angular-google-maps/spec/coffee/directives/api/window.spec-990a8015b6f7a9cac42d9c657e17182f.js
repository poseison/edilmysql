(function(){describe("directives.api.Window",function(){return beforeEach(function(){return this.mocks={scope:{coords:{latitude:90,longitude:89},show:!0,$watch:function(){},$on:function(){}},element:{html:function(){return"test html"}},attrs:{},ctrls:[{getMap:function(){return{}}}]},this.timeOutNoW=function(){return function(t){return t()}}(this),this.gMarker=new google.maps.Marker(this.commonOpts),angular.module("mockModule",[]).controller("windowDirective",function(t){return function(e,n,i,o){return new directives.api.Window(t.timeOutNoW,n,i,o)}}(this)),angular.mock.module("mockModule"),inject(function(t){return function(e,n,i,o,c){return t.subject=c("windowDirective",e,n,i,o),t.subject.onChildCreation=function(e){return t.childWindow=e}}}(this))}),it("can be created",function(){return expect(this.subject).toBeDefined(),expect(this.subject.index).toEqual(this.index)}),describe("link",function(){return describe("withOUT marker",function(){return it("link creates window options and a childWindow",function(){return this.subject.link(this.mocks.scope,this.mocks.element,this.mocks.attrs,this.mocks.ctrls),expect(this.childWindow).toBeDefined(),expect(this.childWindow.opts).toBeDefined()})}),describe("with marker",function(){})})})}).call(this);