(function(){describe("_async",function(){return beforeEach(function(){return this.subject=_async}),it("handle callback passes an index",function(t){return _async.each([1],function(e,n){return expect(e).toEqual(1),expect(n).toEqual(0),t()})}),it("handle array of 101 outputs 101 elements equal to the original, with 1 pauses",function(t){var e,n,u;return e=_.range(101),u=[],n=1,this.subject.each(e,function(t){return u.push(t)},function(){return t(),expect(n).toEqual(2),expect(u.length).toEqual(e.length),expect(u).toEqual(e)},function(){return n++},100)}),it("handle array of 200 outputs 200 elements equal to the original, with 2 pauses",function(t){var e,n,u,r;return e=_.range(200),r=[],n=1,u=!0,this.subject.each(e,function(t){return r.push(t)},function(){return t(),expect(n).toEqual(2),expect(r.length).toEqual(e.length),expect(r).toEqual(e)},function(){return n++},100)}),it("handle array of 1000 outputs 1000 elements equal to the original, with 10 pauses",function(t){var e,n,u;return e=_.range(1e3),u=[],n=1,this.subject.each(e,function(t){return u.push(t)},function(){return t(),expect(n).toEqual(10),expect(u.length).toEqual(e.length),expect(u).toEqual(e)},function(){return n++},100)}),it("handle map of 1000 outputs 1000 elements equal to the original, with 10 pauses",function(t){var e,n,u,r;return e=_.range(1e3),r=[],n=1,u=!0,this.subject.map(e,function(t){return t+=1,"$"+t.toString()},function(u){return r=u,t(),expect(n).toEqual(10),expect(r[999]).toEqual("$1000"),expect(r.length).toEqual(e.length),expect(r).toEqual(_.map(e,function(t){return t+=1,"$"+t.toString()}))},function(){return n++},100)})})}).call(this);