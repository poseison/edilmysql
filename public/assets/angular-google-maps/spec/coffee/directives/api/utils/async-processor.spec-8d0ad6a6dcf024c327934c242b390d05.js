(function(){describe("AsyncProcessor",function(){return beforeEach(function(){return this.subject=directives.api.utils.AsyncProcessor}),it("handle array of 101 outputs 101 elements equal to the original, with 1 pauses",function(){var t,n,e,r;return t=_.range(101),r=[],n=1,e=!0,runs(function(){return this.subject.handleLargeArray(t,function(t){return r.push(t)},function(){return n++},function(){return e=!1})}),waitsFor(function(){return function(){return!e}}(this),"Failed to wait!",1e3),runs(function(){return expect(e).toEqual(!1),expect(n).toEqual(2),expect(r.length).toEqual(t.length),expect(r).toEqual(t)})}),it("handle array of 200 outputs 200 elements equal to the original, with 2 pauses",function(){var t,n,e,r;return t=_.range(200),r=[],n=1,e=!0,runs(function(){return this.subject.handleLargeArray(t,function(t){return r.push(t)},function(){return n++},function(){return e=!1})}),waitsFor(function(){return function(){return!e}}(this),"Failed to wait!",1e3),runs(function(){return expect(e).toEqual(!1),expect(n).toEqual(2),expect(r.length).toEqual(t.length),expect(r).toEqual(t)})}),it("handle array of 1000 outputs 1000 elements equal to the original, with 10 pauses",function(){var t,n,e,r;return t=_.range(1e3),r=[],n=1,e=!0,runs(function(){return this.subject.handleLargeArray(t,function(t){return r.push(t)},function(){return n++},function(){return e=!1})}),waitsFor(function(){return function(){return!e}}(this),1e3),runs(function(){return expect(e).toEqual(!1),expect(n).toEqual(10),expect(r.length).toEqual(t.length),expect(r).toEqual(t)})})})}).call(this);