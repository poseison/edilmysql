(function(){var t={}.hasOwnProperty,e=function(e,n){function a(){this.constructor=e}for(var s in n)t.call(n,s)&&(e[s]=n[s]);return a.prototype=n.prototype,e.prototype=new a,e.__super__=n.prototype,e};describe("oo.BaseObject",function(){return beforeEach(function(){return module("google-maps.directives.api.utils"),inject(function(t){return function(n){var a,s,u;return t.subject=n,u={changePersonName:function(t,e){return t.name=e,t},killPersonsName:function(t){return delete t.name,t}},s={p_name:"no_name",state:"no_state"},t.PersonAttributes=s,a=function(t){function n(t,e){this.name=null!=t?t:n.p_name,this.state=null!=e?e:n.state}return e(n,t),n.include(u),n.extend(s),n}(n),t.name="nick",t.state="fl",t.defaultUsage=new a,t.usage=new a(t.name,t.state)}}(this))}),it("exists ~ you loaded the script!",function(){return expect(null!=this.subject).toEqual(!0)}),describe("include specs",function(){return it("defaults attributes exist",function(){return expect(null!=this.defaultUsage.name).toEqual(!0),expect(null!=this.defaultUsage.name).toEqual(!0)}),it("defaults attributes are correct",function(){return expect(this.defaultUsage.name).toEqual(this.PersonAttributes.p_name),expect(this.defaultUsage.state).toEqual(this.PersonAttributes.state)}),it("subject attributes are correct ",function(){return expect(this.usage.name).toEqual(this.name),expect(this.usage.state).toEqual(this.state)})}),describe("extend specs",function(){return it("defaults functions exist",function(){return expect(null!=this.defaultUsage.changePersonName).toEqual(!0),expect(null!=this.defaultUsage.killPersonsName).toEqual(!0)}),it("subject functions act correctly",function(){var t,e;return t=this.defaultUsage.changePersonName(angular.copy(this.defaultUsage),"john"),e=this.defaultUsage.killPersonsName(this.defaultUsage),expect(t.name).toEqual("john"),expect(e.name).toEqual(void 0)})})})}).call(this);