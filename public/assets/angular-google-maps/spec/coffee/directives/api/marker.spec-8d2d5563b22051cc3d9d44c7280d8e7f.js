(function(){describe("directives.api.Marker",function(){return beforeEach(function(){return module("google-maps"),module("google-maps.mocks"),inject(function(t){return function(e){return t.gmap=new e,t.gmap.mockAPI(),t.gmap.mockLatLng(),t.gmap.mockMarker(),t.gmap.mockEvent()}}(this)),this.mocks={scope:{idKey:0,coords:{latitude:90,longitude:89},show:!0,$watch:function(){},$on:function(){},control:{}},element:{html:function(){return"<p>test html</p>"}},attrs:{isiconvisibleonclick:!0},ctrl:{getMap:function(){return{}}}},this.timeOutNoW=function(){return function(t){return t()}}(this),inject(function(t){return function(e,o,c){var n;return t.$rootScope=e,n=c.defer(),n.resolve({}),t.$rootScope.deferred=n,t.mocks.ctrl.getScope=function(){return t.$rootScope},t.mocks.scope.$new=function(){return t.$rootScope.$new()},t.mocks.scope.deferred=n,t.subject=new o}}(this))}),it("can be created",function(){return expect(this.subject).toBeDefined()}),describe("link",function(){return it("gMarkerManager exists",function(){return this.subject.link(this.mocks.scope,this.mocks.element,this.mocks.attrs,this.mocks.ctrl),this.$rootScope.$apply(),expect(this.subject.gMarkerManager).toBeDefined()}),it("slaps control functions when a control is available",function(){return this.subject.link(this.mocks.scope,this.mocks.element,this.mocks.attrs,this.mocks.ctrl),this.$rootScope.$apply(),expect(this.mocks.scope.control.getGMarkers).toBeDefined()}),it("slaps control functions work",function(){var t;return this.subject.link(this.mocks.scope,this.mocks.element,this.mocks.attrs,this.mocks.ctrl),this.$rootScope.$apply(),t=this.mocks.scope.control.getGMarkers,expect(t).toBeDefined(),expect(t()[0].key).toEqual(this.mocks.scope.idKey)})})})}).call(this);